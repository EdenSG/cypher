\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{// HKP Public Key Fetcher}

\PYG{k+kr}{import} \PYG{n+nx}{HKPCacher} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}./hkp\PYGZhy{}cacher\PYGZsq{}}\PYG{p}{;}
\PYG{k+kr}{import} \PYG{p}{\PYGZob{}}\PYG{n+nx}{log}\PYG{p}{\PYGZcb{}} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}../logger\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{export} \PYG{k}{default} \PYG{k+kr}{class} \PYG{n+nx}{HKP} \PYG{p}{\PYGZob{}}
  \PYG{n+nx}{constructor}\PYG{p}{(}\PYG{n+nx}{keyServerBaseUrl}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{lookup} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{lookup}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}makeFetch} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}makeFetch}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}baseUrl} \PYG{o}{=} \PYG{n+nx}{keyServerBaseUrl} \PYG{o}{?} \PYG{n+nx}{keyServerBaseUrl} \PYG{o}{:} \PYG{l+s+s1}{\PYGZsq{}https://pgp.mit.edu\PYGZsq{}}\PYG{p}{;}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}fetch} \PYG{o}{=} \PYG{p}{(}\PYG{k}{typeof} \PYG{n+nb}{window} \PYG{o}{!==} \PYG{l+s+s1}{\PYGZsq{}undefined\PYGZsq{}} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n+nb}{window}\PYG{p}{.}\PYG{n+nx}{fetch}\PYG{p}{)} \PYG{o}{?} \PYG{n+nb}{window}\PYG{p}{.}\PYG{n+nx}{fetch} \PYG{o}{:} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}makeFetch}\PYG{p}{();}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{lookup}\PYG{p}{(}\PYG{n+nx}{keyId}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{var} \PYG{n+nx}{uri} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}baseUrl} \PYG{o}{+} \PYG{l+s+sb}{`/pks/lookup?op=get\PYGZam{}options=mr\PYGZam{}search=0x}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{keyId}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{;}

    \PYG{c+c1}{// Really obsure bug here. If we replace fetch(url) later, Electron throws}
    \PYG{c+c1}{// an \PYGZdq{}Illegal invocation error\PYGZdq{} unless we unwrap the variable here.}
    \PYG{k+kd}{var} \PYG{n+nx}{fetch} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}fetch}\PYG{p}{;}

    \PYG{k}{return} \PYG{n+nx}{HKPCacher}\PYG{p}{.}\PYG{n+nx}{isCached}\PYG{p}{(}\PYG{n+nx}{keyId}\PYG{p}{).}\PYG{n+nx}{then}\PYG{p}{((}\PYG{n+nx}{result}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n+nx}{result}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{return} \PYG{n+nx}{fetch}\PYG{p}{(}\PYG{n+nx}{uri}\PYG{p}{).}\PYG{n+nx}{then}\PYG{p}{((}\PYG{n+nx}{response}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{n+nx}{response}\PYG{p}{.}\PYG{n+nx}{text}\PYG{p}{()).}\PYG{n+nx}{then}\PYG{p}{((}\PYG{n+nx}{text}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
          \PYG{n+nx}{HKPCacher}\PYG{p}{.}\PYG{n+nx}{cacheResult}\PYG{p}{(}\PYG{n+nx}{keyId}\PYG{p}{,} \PYG{n+nx}{text}\PYG{p}{);}
          \PYG{k}{return} \PYG{n+nx}{text}\PYG{p}{;}
        \PYG{p}{\PYGZcb{});}
      \PYG{p}{\PYGZcb{}}

      \PYG{k}{return} \PYG{n+nx}{result}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}).}\PYG{n+nx}{then}\PYG{p}{((}\PYG{n+nx}{publicKeyArmored}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{publicKeyArmored} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n+nx}{publicKeyArmored}\PYG{p}{.}\PYG{n+nx}{indexOf}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}END PGP PUBLIC KEY BLOCK\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZsq{}}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{return} \PYG{n+nx}{publicKeyArmored}\PYG{p}{.}\PYG{n+nx}{trim}\PYG{p}{();}
      \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{});}
  \PYG{p}{\PYGZcb{}}

  \PYG{c+c1}{// For testing without Electron providing fetch API}
  \PYG{n+nx}{\PYGZus{}makeFetch}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{let} \PYG{n+nx}{request} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}request\PYGZsq{}}\PYG{p}{);}

    \PYG{k}{return} \PYG{p}{(}\PYG{n+nx}{uri}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{k}{return} \PYG{k}{new} \PYG{n+nb}{Promise}\PYG{p}{((}\PYG{n+nx}{resolve}\PYG{p}{,} \PYG{n+nx}{reject}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
        \PYG{n+nx}{request}\PYG{p}{(}\PYG{n+nx}{uri}\PYG{p}{,} \PYG{p}{(}\PYG{n+nx}{error}\PYG{p}{,} \PYG{n+nx}{response}\PYG{p}{,} \PYG{n+nx}{body}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
          \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n+nx}{error} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n+nx}{response}\PYG{p}{.}\PYG{n+nx}{statusCode} \PYG{o}{==} \PYG{l+m+mi}{200}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n+nx}{resolve}\PYG{p}{(\PYGZob{}} \PYG{n+nx}{text}\PYG{o}{:} \PYG{p}{()} \PYG{o}{=\PYGZgt{}} \PYG{n+nx}{body} \PYG{p}{\PYGZcb{});}
          \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
            \PYG{n+nx}{reject}\PYG{p}{(}\PYG{n+nx}{error}\PYG{p}{);}
          \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{});}
      \PYG{p}{\PYGZcb{});}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
