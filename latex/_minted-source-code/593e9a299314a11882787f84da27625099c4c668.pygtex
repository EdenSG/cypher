\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kr}{import} \PYG{p}{\PYGZob{}}\PYG{n+nx}{MessageViewExtension}\PYG{p}{\PYGZcb{}} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}nylas\PYGZhy{}exports\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{import} \PYG{n+nx}{EmailPGPStore} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}../email\PYGZhy{}pgp\PYGZhy{}store\PYGZsq{}}\PYG{p}{;}
\PYG{k+kr}{import} \PYG{n+nx}{Actions} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}../email\PYGZhy{}pgp\PYGZhy{}actions\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{class} \PYG{n+nx}{MessageLoaderExtension} \PYG{k+kr}{extends} \PYG{n+nx}{MessageViewExtension} \PYG{p}{\PYGZob{}}
  \PYG{c+c1}{// CANNOT crash here. If we do, the whole app stops working}
  \PYG{c+c1}{// properly and the main screen is stuck with the message}
  \PYG{c+c1}{// viewer}
  \PYG{k+kr}{static} \PYG{n+nx}{formatMessageBody}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{c+c1}{// Check for a cached message body for a decrypted message}
    \PYG{c+c1}{// If we have one we should return the cached message so the}
    \PYG{c+c1}{// proper message body is displayed}
    \PYG{k+kd}{let} \PYG{n+nx}{cached} \PYG{o}{=} \PYG{n+nx}{EmailPGPStore}\PYG{p}{.}\PYG{n+nx}{getCachedBody}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{);}
    \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{cached}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+sb}{`Have cached body for }\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{id}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{);}
      \PYG{k}{return} \PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{body} \PYG{o}{=} \PYG{n+nx}{cached}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+c1}{// If we don\PYGZsq{}t have a cached copy and the message matches the parameters for}
    \PYG{c+c1}{// decryption, then signal the `EmailPGPStore` to decrypt the message and}
    \PYG{c+c1}{// pass on the cloned message}
    \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{EmailPGPStore}\PYG{p}{.}\PYG{n+nx}{shouldDecryptMessage}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{))} \PYG{p}{\PYGZob{}}
      \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+sb}{`[PGP] MessageLoaderExtension formatting }\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{id}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{);}
      \PYG{n+nx}{Actions}\PYG{p}{.}\PYG{n+nx}{decryptMessage}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kr}{export} \PYG{k}{default} \PYG{n+nx}{MessageLoaderExtension}\PYG{p}{;}
\end{Verbatim}
