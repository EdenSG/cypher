\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kr}{import} \PYG{n+nx}{mimelib} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}mimelib\PYGZsq{}}\PYG{p}{;}
\PYG{k+kr}{import} \PYG{n+nx}{uuid} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}uuid\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{const} \PYG{n+nx}{CR} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}\PYGZbs{}r\PYGZdq{}}\PYG{p}{;}
\PYG{k+kr}{const} \PYG{n+nx}{LF} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}\PYGZbs{}n\PYGZdq{}}\PYG{p}{;}
\PYG{k+kr}{const} \PYG{n+nx}{CRLF} \PYG{o}{=} \PYG{n+nx}{CR}\PYG{o}{+}\PYG{n+nx}{LF}\PYG{p}{;}

\PYG{c+c1}{// MIME Writer to create the MIME encoded emails before encryption. Normally}
\PYG{c+c1}{// the N1 Sync Engine does this itself, but for the case of secrecy of emails}
\PYG{c+c1}{// from the Sync Engine the emails are encoded in the N1 clients}
\PYG{c+c1}{//}
\PYG{c+c1}{// Based on https://github.com/isaacs/multipart\PYGZhy{}js}
\PYG{k+kr}{export} \PYG{k}{default} \PYG{k+kr}{class} \PYG{n+nx}{MIMEWriter} \PYG{p}{\PYGZob{}}
  \PYG{n+nx}{constructor}\PYG{p}{(}\PYG{n+nx}{boundary} \PYG{o}{=} \PYG{l+s+sb}{`PGP\PYGZhy{}N1=\PYGZus{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{uuid}\PYG{p}{().}\PYG{n+nx}{toUpperCase}\PYG{p}{()}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}boundary} \PYG{o}{=} \PYG{n+nx}{boundary}\PYG{p}{;}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}\PYGZsq{}}\PYG{p}{;}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{writePart} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{writePart}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{end} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{end}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}writeHeader} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}writeHeader}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}writeHeader}\PYG{p}{();}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{writePart}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{,} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{encoding} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}7bit\PYGZsq{}}\PYG{p}{,}
    \PYG{n+nx}{type} \PYG{o}{=} \PYG{l+s+sb}{`text/plain; charset=\PYGZdq{}UTF\PYGZhy{}8\PYGZdq{}`}\PYG{p}{,}
    \PYG{n+nx}{name}\PYG{p}{,}
    \PYG{n+nx}{filename}
  \PYG{p}{\PYGZcb{}} \PYG{o}{=} \PYG{p}{\PYGZob{}\PYGZcb{})} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{var} \PYG{n+nx}{opener} \PYG{o}{=} \PYG{l+s+sb}{`\PYGZhy{}\PYGZhy{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}boundary}\PYG{l+s+si}{\PYGZcb{}\PYGZdl{}\PYGZob{}}\PYG{n+nx}{CRLF}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{;}

    \PYG{n+nx}{opener} \PYG{o}{+=} \PYG{l+s+sb}{`Content\PYGZhy{}Type: }\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{type}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{;}

    \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{name}\PYG{p}{)}     \PYG{n+nx}{opener} \PYG{o}{+=} \PYG{l+s+sb}{`; name=\PYGZdq{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{name}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{\PYGZdq{}`}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{filename}\PYG{p}{)} \PYG{n+nx}{opener} \PYG{o}{+=} \PYG{l+s+sb}{`; filename=\PYGZdq{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{filename}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{\PYGZdq{}`}\PYG{p}{;}

    \PYG{n+nx}{opener} \PYG{o}{=} \PYG{n+nx}{mimelib}\PYG{p}{.}\PYG{n+nx}{foldLine}\PYG{p}{(}\PYG{n+nx}{opener}\PYG{p}{);}
    \PYG{n+nx}{opener} \PYG{o}{+=} \PYG{n+nx}{CRLF}\PYG{p}{;}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output} \PYG{o}{+=} \PYG{n+nx}{opener}\PYG{p}{;}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output} \PYG{o}{+=} \PYG{n+nx}{mimelib}\PYG{p}{.}\PYG{n+nx}{foldLine}\PYG{p}{(}\PYG{l+s+sb}{`Content\PYGZhy{}Transfer\PYGZhy{}Encoding: }\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{encoding}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output} \PYG{o}{+=} \PYG{n+nx}{CRLF}\PYG{p}{;}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output} \PYG{o}{+=} \PYG{n+nx}{CRLF}\PYG{p}{;}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output} \PYG{o}{+=} \PYG{n+nx}{message} \PYG{o}{+} \PYG{n+nx}{CRLF}\PYG{p}{;}

    \PYG{k}{return} \PYG{k}{this}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{end}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output} \PYG{o}{+} \PYG{l+s+sb}{`}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{CRLF}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{\PYGZhy{}\PYGZhy{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}boundary}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{\PYGZhy{}\PYGZhy{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{CRLF}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{;}

    \PYG{k}{return} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{\PYGZus{}writeHeader}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{var} \PYG{n+nx}{header} \PYG{o}{=} \PYG{l+s+sb}{`Content\PYGZhy{}Type: multipart/signed; }\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{CRLF}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{;}
    \PYG{n+nx}{header} \PYG{o}{+=} \PYG{l+s+sb}{`}\PYG{err}{\PYGZbs{}}\PYG{l+s+sb}{tboundary=\PYGZdq{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}boundary}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{\PYGZdq{};}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{CRLF}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{;}
    \PYG{n+nx}{header} \PYG{o}{+=} \PYG{l+s+sb}{`}\PYG{err}{\PYGZbs{}}\PYG{l+s+sb}{tprotocol=\PYGZdq{}application/pgp\PYGZhy{}signature\PYGZdq{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{CRLF}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{;}
    \PYG{n+nx}{header} \PYG{o}{+=} \PYG{n+nx}{CRLF} \PYG{o}{+} \PYG{n+nx}{CRLF}\PYG{p}{;}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}output} \PYG{o}{=} \PYG{n+nx}{header}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
