\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{// Adds a button to encrypt the message body with a PGP user key from Keybase.}
\PYG{c+c1}{// User needs to specify which user to encrypt with. Script will download the}
\PYG{c+c1}{// key and present the user\PYGZsq{}s Keybase profile to ensure verification.}

\PYG{k+kr}{import} \PYG{n+nx}{fs} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}fs\PYGZsq{}}\PYG{p}{;}
\PYG{k+kr}{import} \PYG{n+nx}{path} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}path\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{import} \PYG{p}{\PYGZob{}}\PYG{n+nx}{Actions}\PYG{p}{,} \PYG{n+nx}{DraftStore}\PYG{p}{,} \PYG{n+nx}{QuotedHTMLTransformer}\PYG{p}{,} \PYG{n+nx}{React}\PYG{p}{,} \PYG{n+nx}{Utils}\PYG{p}{\PYGZcb{}} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}nylas\PYGZhy{}exports\PYGZsq{}}\PYG{p}{;}
\PYG{k+kr}{import} \PYG{p}{\PYGZob{}}\PYG{n+nx}{Menu}\PYG{p}{,} \PYG{n+nx}{GeneratedForm}\PYG{p}{,} \PYG{n+nx}{Popover}\PYG{p}{,} \PYG{n+nx}{RetinaImg}\PYG{p}{\PYGZcb{}} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}nylas\PYGZhy{}component\PYGZhy{}kit\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{import} \PYG{n+nx}{kbpgp} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}kbpgp\PYGZsq{}}\PYG{p}{;}
\PYG{k+kr}{import} \PYG{n+nx}{rimraf} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}rimraf\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{import} \PYG{p}{\PYGZob{}}\PYG{n+nx}{KeybaseStore}\PYG{p}{\PYGZcb{}} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}../keybase\PYGZsq{}}\PYG{p}{;}
\PYG{k+kr}{import} \PYG{n+nx}{MIMEWriter} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}./mime\PYGZhy{}writer\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{const} \PYG{n+nx}{NO\PYGZus{}OP} \PYG{o}{=} \PYG{p}{()} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}\PYGZcb{};}
\PYG{k+kr}{const} \PYG{n+nx}{SPAN\PYGZus{}STYLES} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}font\PYGZhy{}family:monospace,monospace;white\PYGZhy{}space:pre;\PYGZdq{}}\PYG{p}{;}
\PYG{k+kr}{const} \PYG{n+nx}{rimrafPromise} \PYG{o}{=} \PYG{n+nb}{Promise}\PYG{p}{.}\PYG{n+nx}{promisify}\PYG{p}{(}\PYG{n+nx}{rimraf}\PYG{p}{);}

\PYG{k+kr}{class} \PYG{n+nx}{ComposerLoader} \PYG{k+kr}{extends} \PYG{n+nx}{React}\PYG{p}{.}\PYG{n+nx}{Component} \PYG{p}{\PYGZob{}}
  \PYG{k+kr}{static} \PYG{n+nx}{displayName} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}ComposerLoader\PYGZsq{}}

  \PYG{k+kr}{static} \PYG{n+nx}{propTypes} \PYG{o}{=} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{draftClientId}\PYG{o}{:} \PYG{n+nx}{React}\PYG{p}{.}\PYG{n+nx}{PropTypes}\PYG{p}{.}\PYG{n+nx}{string}\PYG{p}{.}\PYG{n+nx}{isRequired}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{constructor}\PYG{p}{(}\PYG{n+nx}{props}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kr}{super}\PYG{p}{(}\PYG{n+nx}{props}\PYG{p}{);}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{render} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{render}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{onChange} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{onChange}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{onSubmit} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{onSubmit}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}hidePopover} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}hidePopover}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}ensureConfigurationDirectoryExists} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}ensureConfigurationDirectoryExists}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{temporaryAttachmentLocation} \PYG{o}{=} \PYG{n+nx}{path}\PYG{p}{.}\PYG{n+nx}{join}\PYG{p}{(}\PYG{n+nx}{KeybaseStore}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}configurationDirPath}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}attachments\PYGZsq{}}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}ensureConfigurationDirectoryExists}\PYG{p}{();}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{state} \PYG{o}{=} \PYG{p}{\PYGZob{}}
      \PYG{n+nx}{username}\PYG{o}{:} \PYG{l+s+s1}{\PYGZsq{}\PYGZsq{}}
    \PYG{p}{\PYGZcb{}}

    \PYG{n+nx}{global}\PYG{p}{.}\PYG{n+nx}{\PYGZdl{}pgpComposer} \PYG{o}{=} \PYG{k}{this}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{render}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{let} \PYG{n+nx}{button} \PYG{o}{=} \PYG{o}{\PYGZlt{}}\PYG{n+nx}{button} \PYG{n+nx}{className}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}btn btn\PYGZhy{}toolbar\PYGZdq{}}\PYG{o}{\PYGZgt{}}
      \PYG{n+nx}{PGP} \PYG{n+nx}{Encrypt}
      \PYG{o}{\PYGZlt{}}\PYG{n+nx}{RetinaImg} \PYG{n+nx}{mode}\PYG{o}{=}\PYG{p}{\PYGZob{}}\PYG{n+nx}{RetinaImg}\PYG{p}{.}\PYG{n+nx}{Mode}\PYG{p}{.}\PYG{n+nx}{ContentPreserve}\PYG{p}{\PYGZcb{}}
                 \PYG{n+nx}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}toolbar\PYGZhy{}chevron.png\PYGZdq{}} \PYG{o}{/\PYGZgt{}}
    \PYG{o}{\PYGZlt{}}\PYG{err}{/button\PYGZgt{}}

    \PYG{k}{return} \PYG{o}{\PYGZlt{}}\PYG{n+nx}{Popover} \PYG{n+nx}{ref}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}popover\PYGZdq{}}
                    \PYG{n+nx}{className}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}pgp pgp\PYGZhy{}menu\PYGZhy{}picker pull\PYGZhy{}right\PYGZdq{}}
                    \PYG{n+nx}{buttonComponent}\PYG{o}{=}\PYG{p}{\PYGZob{}}\PYG{n+nx}{button}\PYG{p}{\PYGZcb{}}\PYG{o}{\PYGZgt{}}
      \PYG{o}{\PYGZlt{}}\PYG{n+nx}{form} \PYG{n+nx}{className}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}form col\PYGZhy{}12 m2\PYGZdq{}}\PYG{o}{\PYGZgt{}}
        \PYG{o}{\PYGZlt{}}\PYG{n+nx}{label}\PYG{o}{\PYGZgt{}}\PYG{n+nx}{Keybase} \PYG{n+nx}{Username}\PYG{o}{:\PYGZlt{}}\PYG{err}{/label\PYGZgt{}}
        \PYG{o}{\PYGZlt{}}\PYG{n+nx}{input} \PYG{n+nx}{className}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}field mb2 block\PYGZdq{}} \PYG{n+nx}{type}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}text\PYGZdq{}} \PYG{n+nx}{placeholder}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}(e.g. max)\PYGZdq{}} \PYG{n+nx}{onChange}\PYG{o}{=}\PYG{p}{\PYGZob{}}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{onChange}\PYG{p}{\PYGZcb{}} \PYG{o}{/\PYGZgt{}}
        \PYG{o}{\PYGZlt{}}\PYG{n+nx}{button} \PYG{n+nx}{className}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}btn mb1 block\PYGZdq{}} \PYG{n+nx}{onClick}\PYG{o}{=}\PYG{p}{\PYGZob{}}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{onSubmit}\PYG{p}{\PYGZcb{}}\PYG{o}{\PYGZgt{}}\PYG{n+nx}{Encrypt}\PYG{o}{\PYGZlt{}}\PYG{err}{/button\PYGZgt{}}
      \PYG{o}{\PYGZlt{}}\PYG{err}{/form\PYGZgt{}}
    \PYG{o}{\PYGZlt{}}\PYG{err}{/Popover\PYGZgt{}}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{onChange}\PYG{p}{(}\PYG{n+nx}{e}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}change\PYGZsq{}}\PYG{p}{,} \PYG{n+nx}{e}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{setState}\PYG{p}{(\PYGZob{}}
      \PYG{n+nx}{username}\PYG{o}{:} \PYG{n+nx}{e}\PYG{p}{.}\PYG{n+nx}{target}\PYG{p}{.}\PYG{n+nx}{value}
    \PYG{p}{\PYGZcb{});}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{onSubmit}\PYG{p}{(}\PYG{n+nx}{e}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}hidePopover}\PYG{p}{();}

    \PYG{k+kd}{let} \PYG{p}{\PYGZob{}}\PYG{n+nx}{username}\PYG{p}{,} \PYG{n+nx}{fingerprint}\PYG{p}{\PYGZcb{}} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{state}\PYG{p}{;}

    \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}submit\PYGZsq{}}\PYG{p}{);}
    \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{n+nx}{username}\PYG{p}{);}

    \PYG{k}{return} \PYG{n+nx}{KeybaseStore}\PYG{p}{.}\PYG{n+nx}{keybaseRemote}\PYG{p}{.}\PYG{n+nx}{publicKeyForUsername}\PYG{p}{(}\PYG{n+nx}{username}\PYG{p}{).}\PYG{n+nx}{then}\PYG{p}{(}\PYG{n+nx}{armoredKey} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n+nx}{armoredKey}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{throw} \PYG{k}{new} \PYG{n+nb}{Error}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}No public key for username \PYGZdq{}} \PYG{o}{+} \PYG{n+nx}{username}\PYG{p}{);}
      \PYG{p}{\PYGZcb{}}

      \PYG{k}{return} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}importPublicKey}\PYG{p}{(}\PYG{n+nx}{armoredKey}\PYG{p}{).}\PYG{n+nx}{then}\PYG{p}{(}\PYG{n+nx}{publicKey} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
        \PYG{k}{return} \PYG{p}{[}
          \PYG{n+nx}{DraftStore}\PYG{p}{.}\PYG{n+nx}{sessionForClientId}\PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{props}\PYG{p}{.}\PYG{n+nx}{draftClientId}\PYG{p}{),}
          \PYG{n+nx}{publicKey}
        \PYG{p}{];}
      \PYG{p}{\PYGZcb{}).}\PYG{n+nx}{spread}\PYG{p}{((}\PYG{n+nx}{session}\PYG{p}{,} \PYG{n+nx}{publicKey}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
        \PYG{k+kd}{let} \PYG{n+nx}{draftHtml} \PYG{o}{=} \PYG{n+nx}{session}\PYG{p}{.}\PYG{n+nx}{draft}\PYG{p}{().}\PYG{n+nx}{body}\PYG{p}{;}
        \PYG{k+kd}{let} \PYG{n+nx}{text} \PYG{o}{=} \PYG{n+nx}{QuotedHTMLTransformer}\PYG{p}{.}\PYG{n+nx}{removeQuotedHTML}\PYG{p}{(}\PYG{n+nx}{draftHtml}\PYG{p}{);}

        \PYG{k+kd}{let} \PYG{n+nx}{fingerprint} \PYG{o}{=} \PYG{n+nx}{kbpgp}\PYG{p}{.}\PYG{n+nx}{util}\PYG{p}{.}\PYG{n+nx}{format\PYGZus{}fingerprint}\PYG{p}{(}\PYG{n+nx}{publicKey}\PYG{p}{.}\PYG{n+nx}{get\PYGZus{}pgp\PYGZus{}fingerprint}\PYG{p}{());}
        \PYG{k+kd}{let} \PYG{n+nx}{bodyHeader} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}formatBodyHeader}\PYG{p}{(}\PYG{n+nx}{username}\PYG{p}{,} \PYG{n+nx}{fingerprint}\PYG{p}{);}

        \PYG{k}{return} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}encryptMessage}\PYG{p}{(}\PYG{n+nx}{text}\PYG{p}{,} \PYG{n+nx}{publicKey}\PYG{p}{).}\PYG{n+nx}{then}\PYG{p}{(}\PYG{n+nx}{pgpMessage} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
          \PYG{k+kd}{let} \PYG{n+nx}{temporaryDir} \PYG{o}{=} \PYG{n+nx}{path}\PYG{p}{.}\PYG{n+nx}{join}\PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{temporaryAttachmentLocation}\PYG{p}{,} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{props}\PYG{p}{.}\PYG{n+nx}{draftClientId}\PYG{p}{);}
          \PYG{k+kd}{let} \PYG{n+nx}{attachmentPath} \PYG{o}{=} \PYG{n+nx}{path}\PYG{p}{.}\PYG{n+nx}{join}\PYG{p}{(}\PYG{n+nx}{temporaryDir}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}encrypted.asc\PYGZsq{}}\PYG{p}{);}

          \PYG{k}{return} \PYG{n+nx}{fs}\PYG{p}{.}\PYG{n+nx}{accessAsync}\PYG{p}{(}\PYG{n+nx}{temporaryDir}\PYG{p}{,} \PYG{n+nx}{fs}\PYG{p}{.}\PYG{n+nx}{F\PYGZus{}OK}\PYG{p}{).}\PYG{n+nx}{then}\PYG{p}{(()} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
            \PYG{k}{return} \PYG{n+nx}{rimrafPromise}\PYG{p}{(}\PYG{n+nx}{temporaryDir}\PYG{p}{);}
          \PYG{p}{\PYGZcb{},} \PYG{n+nx}{NO\PYGZus{}OP}\PYG{p}{).}\PYG{n+nx}{then}\PYG{p}{(()} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
            \PYG{k}{return} \PYG{n+nx}{fs}\PYG{p}{.}\PYG{n+nx}{mkdirAsync}\PYG{p}{(}\PYG{n+nx}{temporaryDir}\PYG{p}{);}
          \PYG{p}{\PYGZcb{}).}\PYG{n+nx}{then}\PYG{p}{(()} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
            \PYG{k}{return} \PYG{n+nx}{fs}\PYG{p}{.}\PYG{n+nx}{writeFileAsync}\PYG{p}{(}\PYG{n+nx}{attachmentPath}\PYG{p}{,} \PYG{n+nx}{pgpMessage}\PYG{p}{);}
          \PYG{p}{\PYGZcb{}).}\PYG{n+nx}{then}\PYG{p}{(()} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
            \PYG{n+nx}{Actions}\PYG{p}{.}\PYG{n+nx}{addAttachment}\PYG{p}{(\PYGZob{}}
              \PYG{n+nx}{messageClientId}\PYG{o}{:} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{props}\PYG{p}{.}\PYG{n+nx}{draftClientId}\PYG{p}{,}
              \PYG{n+nx}{filePath}\PYG{o}{:} \PYG{n+nx}{attachmentPath}
            \PYG{p}{\PYGZcb{});}
          \PYG{p}{\PYGZcb{});}
        \PYG{p}{\PYGZcb{}).}\PYG{n+nx}{then}\PYG{p}{(()} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
          \PYG{k+kd}{let} \PYG{n+nx}{body} \PYG{o}{=} \PYG{n+nx}{QuotedHTMLTransformer}\PYG{p}{.}\PYG{n+nx}{appendQuotedHTML}\PYG{p}{(}\PYG{n+nx}{bodyHeader}\PYG{p}{,} \PYG{n+nx}{draftHtml}\PYG{p}{);}

          \PYG{n+nx}{session}\PYG{p}{.}\PYG{n+nx}{changes}\PYG{p}{.}\PYG{n+nx}{add}\PYG{p}{(\PYGZob{}} \PYG{n+nx}{body} \PYG{p}{\PYGZcb{});}
          \PYG{n+nx}{session}\PYG{p}{.}\PYG{n+nx}{changes}\PYG{p}{.}\PYG{n+nx}{commit}\PYG{p}{();}
        \PYG{p}{\PYGZcb{});}
      \PYG{p}{\PYGZcb{}).}\PYG{k}{catch}\PYG{p}{(}\PYG{n+nx}{err} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
        \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{n+nx}{err}\PYG{p}{);}
      \PYG{p}{\PYGZcb{});}
    \PYG{p}{\PYGZcb{});}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{\PYGZus{}hidePopover}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{refs}\PYG{p}{.}\PYG{n+nx}{popover}\PYG{p}{.}\PYG{n+nx}{close}\PYG{p}{();}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{\PYGZus{}formatBodyHeader}\PYG{p}{(}\PYG{n+nx}{username}\PYG{p}{,} \PYG{n+nx}{fingerprint}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{return} \PYG{l+s+sb}{`This message is encrypted for \PYGZlt{}span style=\PYGZdq{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{SPAN\PYGZus{}STYLES}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{\PYGZdq{}\PYGZgt{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{username}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{\PYGZlt{}/span\PYGZgt{} with key fingerprint \PYGZlt{}span style=\PYGZdq{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{SPAN\PYGZus{}STYLES}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{\PYGZdq{}\PYGZgt{}}\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{fingerprint}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{\PYGZlt{}/span\PYGZgt{}.`}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{\PYGZus{}importPublicKey}\PYG{p}{(}\PYG{n+nx}{publicKey}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{let} \PYG{n+nx}{import\PYGZus{}from\PYGZus{}armored\PYGZus{}pgp} \PYG{o}{=} \PYG{n+nb}{Promise}\PYG{p}{.}\PYG{n+nx}{promisify}\PYG{p}{(}\PYG{n+nx}{kbpgp}\PYG{p}{.}\PYG{n+nx}{KeyManager}\PYG{p}{.}\PYG{n+nx}{import\PYGZus{}from\PYGZus{}armored\PYGZus{}pgp}\PYG{p}{);}

    \PYG{k}{return} \PYG{n+nx}{import\PYGZus{}from\PYGZus{}armored\PYGZus{}pgp}\PYG{p}{(\PYGZob{}}
      \PYG{n+nx}{armored}\PYG{o}{:} \PYG{n+nx}{publicKey}
    \PYG{p}{\PYGZcb{}).}\PYG{n+nx}{then}\PYG{p}{(([} \PYG{n+nx}{keyManager}\PYG{p}{,} \PYG{n+nx}{warnings} \PYG{p}{])} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{k}{return} \PYG{n+nx}{keyManager}\PYG{p}{;}
    \PYG{p}{\PYGZcb{});}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{\PYGZus{}encryptMessage}\PYG{p}{(}\PYG{n+nx}{text}\PYG{p}{,} \PYG{n+nx}{encrypt\PYGZus{}for}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{let} \PYG{n+nx}{box} \PYG{o}{=} \PYG{n+nb}{Promise}\PYG{p}{.}\PYG{n+nx}{promisify}\PYG{p}{(}\PYG{n+nx}{kbpgp}\PYG{p}{.}\PYG{n+nx}{box}\PYG{p}{);}

    \PYG{k+kd}{let} \PYG{n+nx}{writer} \PYG{o}{=} \PYG{k}{new} \PYG{n+nx}{MIMEWriter}\PYG{p}{();}

    \PYG{n+nx}{writer}\PYG{p}{.}\PYG{n+nx}{writePart}\PYG{p}{(}\PYG{n+nx}{text}\PYG{p}{,} \PYG{p}{\PYGZob{}}
      \PYG{n+nx}{type}\PYG{o}{:} \PYG{l+s+s1}{\PYGZsq{}text/html; charset=\PYGZdq{}UTF\PYGZhy{}8\PYGZdq{}\PYGZsq{}}
    \PYG{p}{\PYGZcb{});}

    \PYG{k+kd}{let} \PYG{n+nx}{msg} \PYG{o}{=} \PYG{n+nx}{writer}\PYG{p}{.}\PYG{n+nx}{end}\PYG{p}{();}

    \PYG{k}{return} \PYG{n+nx}{box}\PYG{p}{(\PYGZob{}} \PYG{n+nx}{msg}\PYG{p}{,} \PYG{n+nx}{encrypt\PYGZus{}for} \PYG{p}{\PYGZcb{}).}\PYG{n+nx}{then}\PYG{p}{(([} \PYG{n+nx}{pgpMessage}\PYG{p}{,} \PYG{n+nx}{pgpMessageBuffer} \PYG{p}{])} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{k}{return} \PYG{n+nx}{pgpMessage}\PYG{p}{;}
    \PYG{p}{\PYGZcb{});}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{\PYGZus{}ensureConfigurationDirectoryExists}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{fs}\PYG{p}{.}\PYG{n+nx}{access}\PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{temporaryAttachmentLocation}\PYG{p}{,} \PYG{n+nx}{fs}\PYG{p}{.}\PYG{n+nx}{F\PYGZus{}OK}\PYG{p}{,} \PYG{n+nx}{err} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{err}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}[PGP] Temporary attachment directory missing, creating\PYGZsq{}}\PYG{p}{);}
        \PYG{n+nx}{fs}\PYG{p}{.}\PYG{n+nx}{mkdir}\PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{temporaryAttachmentLocation}\PYG{p}{,} \PYG{n+nx}{err} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
          \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{err}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{error}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}[PGP] Temporary attachment directory creation unsuccessful\PYGZsq{}}\PYG{p}{,} \PYG{n+nx}{err}\PYG{p}{);}
          \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
            \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}[PGP] Temporary attachment directory creation successful\PYGZsq{}}\PYG{p}{);}
          \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{});}
      \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{});}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kr}{export} \PYG{k}{default} \PYG{n+nx}{ComposerLoader}\PYG{p}{;}
\end{Verbatim}
