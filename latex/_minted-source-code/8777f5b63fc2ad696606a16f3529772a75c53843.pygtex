\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kr}{import} \PYG{n+nx}{uuid} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}uuid\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{import} \PYG{p}{\PYGZob{}}\PYG{n+nx}{log}\PYG{p}{\PYGZcb{}} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}./logger\PYGZsq{}}\PYG{p}{;}
\PYG{k+kr}{import} \PYG{n+nx}{proto} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}./worker\PYGZhy{}protocol\PYGZsq{}}\PYG{p}{;}
\PYG{k+kr}{import} \PYG{n+nx}{KbpgpDecryptController} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}./kbpgp/kbpgp\PYGZhy{}decrypt\PYGZsq{}}\PYG{p}{;}

\PYG{k+kr}{class} \PYG{n+nx}{EventProcessor} \PYG{p}{\PYGZob{}}
  \PYG{n+nx}{constructor}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}pendingPromises} \PYG{o}{=} \PYG{p}{\PYGZob{}\PYGZcb{};}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}kbpgpDecryptController} \PYG{o}{=} \PYG{k}{new} \PYG{n+nx}{KbpgpDecryptController}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{requestPassphrase} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{requestPassphrase}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}sendError} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}sendError}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}handleDecryptMessage} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}handleDecryptMessage}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}
    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}onFrontendMessage} \PYG{o}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}onFrontendMessage}\PYG{p}{.}\PYG{n+nx}{bind}\PYG{p}{(}\PYG{k}{this}\PYG{p}{);}

    \PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{on}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}message\PYGZsq{}}\PYG{p}{,} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}onFrontendMessage}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{requestPassphrase}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{let} \PYG{n+nx}{id} \PYG{o}{=} \PYG{n+nx}{uuid}\PYG{p}{();}

    \PYG{k}{return} \PYG{k}{new} \PYG{n+nb}{Promise}\PYG{p}{((}\PYG{n+nx}{resolve}\PYG{p}{,} \PYG{n+nx}{reject}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}pendingPromises}\PYG{p}{[}\PYG{n+nx}{id}\PYG{p}{]} \PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{n+nx}{resolve}\PYG{p}{,} \PYG{n+nx}{reject}\PYG{p}{\PYGZcb{};}
      \PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{send}\PYG{p}{(\PYGZob{}} \PYG{n+nx}{method}\PYG{o}{:} \PYG{n+nx}{proto}\PYG{p}{.}\PYG{n+nx}{REQUEST\PYGZus{}PASSPHRASE}\PYG{p}{,} \PYG{n+nx}{id}\PYG{p}{,} \PYG{n+nx}{message} \PYG{p}{\PYGZcb{});}
    \PYG{p}{\PYGZcb{});}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{\PYGZus{}sendError}\PYG{p}{(}\PYG{n+nx}{err}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{send}\PYG{p}{(\PYGZob{}} \PYG{n+nx}{method}\PYG{o}{:} \PYG{n+nx}{proto}\PYG{p}{.}\PYG{n+nx}{ERROR\PYGZus{}OCCURRED}\PYG{p}{,} \PYG{n+nx}{err}\PYG{o}{:} \PYG{n+nx}{err}\PYG{p}{,} \PYG{n+nx}{errorMessage}\PYG{o}{:} \PYG{n+nx}{err}\PYG{p}{.}\PYG{n+nx}{message}\PYG{p}{,} \PYG{n+nx}{errorStackTrace}\PYG{o}{:} \PYG{n+nx}{err}\PYG{p}{.}\PYG{n+nx}{stack} \PYG{p}{\PYGZcb{});}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{\PYGZus{}handleDecryptMessage}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{let} \PYG{p}{\PYGZob{}}\PYG{n+nx}{id}\PYG{p}{\PYGZcb{}} \PYG{o}{=} \PYG{n+nx}{message}\PYG{p}{;}
    \PYG{k+kd}{let} \PYG{n+nx}{notify} \PYG{o}{=} \PYG{p}{(}\PYG{n+nx}{result}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{send}\PYG{p}{(\PYGZob{}} \PYG{n+nx}{method}\PYG{o}{:} \PYG{n+nx}{proto}\PYG{p}{.}\PYG{n+nx}{PROMISE\PYGZus{}NOTIFY}\PYG{p}{,} \PYG{n+nx}{id}\PYG{p}{,} \PYG{n+nx}{result} \PYG{p}{\PYGZcb{});}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}kbpgpDecryptController}\PYG{p}{.}\PYG{n+nx}{decrypt}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{,} \PYG{n+nx}{notify}\PYG{p}{).}\PYG{n+nx}{then}\PYG{p}{((\PYGZob{}}
      \PYG{n+nx}{literals} \PYG{o}{=} \PYG{p}{[],}
      \PYG{n+nx}{signedBy} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}\PYGZsq{}}\PYG{p}{,}
      \PYG{n+nx}{elapsed}
    \PYG{p}{\PYGZcb{})} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{send}\PYG{p}{(\PYGZob{}} \PYG{n+nx}{method}\PYG{o}{:} \PYG{n+nx}{proto}\PYG{p}{.}\PYG{n+nx}{DECRYPTION\PYGZus{}RESULT}\PYG{p}{,} \PYG{n+nx}{id}\PYG{p}{,} \PYG{n+nx}{result}\PYG{o}{:} \PYG{p}{\PYGZob{}} \PYG{n+nx}{text}\PYG{o}{:} \PYG{n+nx}{literals}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{].}\PYG{n+nx}{toString}\PYG{p}{(),} \PYG{n+nx}{signedBy}\PYG{o}{:} \PYG{n+nx}{signedBy} \PYG{p}{\PYGZcb{},} \PYG{n+nx}{elapsed} \PYG{p}{\PYGZcb{});}
    \PYG{p}{\PYGZcb{}).}\PYG{k}{catch}\PYG{p}{((}\PYG{n+nx}{err}\PYG{p}{)} \PYG{o}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
      \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}sendError}\PYG{p}{(}\PYG{n+nx}{err}\PYG{p}{);}
      \PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{send}\PYG{p}{(\PYGZob{}} \PYG{n+nx}{method}\PYG{o}{:} \PYG{n+nx}{proto}\PYG{p}{.}\PYG{n+nx}{PROMISE\PYGZus{}REJECT}\PYG{p}{,} \PYG{n+nx}{id}\PYG{p}{,} \PYG{n+nx}{result}\PYG{o}{:} \PYG{n+nx}{err}\PYG{p}{.}\PYG{n+nx}{message} \PYG{p}{\PYGZcb{});}
    \PYG{p}{\PYGZcb{});}
  \PYG{p}{\PYGZcb{}}

  \PYG{n+nx}{\PYGZus{}onFrontendMessage}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{method} \PYG{o}{===} \PYG{n+nx}{proto}\PYG{p}{.}\PYG{n+nx}{DECRYPT}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{c+c1}{// DECRYPT}
      \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}handleDecryptMessage}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{method} \PYG{o}{===} \PYG{n+nx}{proto}\PYG{p}{.}\PYG{n+nx}{PROMISE\PYGZus{}RESOLVE} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}pendingPromises}\PYG{p}{[}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{id}\PYG{p}{])} \PYG{p}{\PYGZob{}}
      \PYG{c+c1}{// PROMISE\PYGZus{}RESOLVE}
      \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}pendingPromises}\PYG{p}{[}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{id}\PYG{p}{].}\PYG{n+nx}{resolve}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{result}\PYG{p}{);}
      \PYG{k}{delete} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}pendingPromises}\PYG{p}{[}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{id}\PYG{p}{];}
    \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{method} \PYG{o}{===} \PYG{n+nx}{proto}\PYG{p}{.}\PYG{n+nx}{PROMISE\PYGZus{}REJECT} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}pendingPromises}\PYG{p}{[}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{id}\PYG{p}{])} \PYG{p}{\PYGZob{}}
      \PYG{c+c1}{// PROMISE\PYGZus{}REJECT}
      \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}pendingPromises}\PYG{p}{[}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{id}\PYG{p}{].}\PYG{n+nx}{reject}\PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{result}\PYG{p}{);}
      \PYG{k}{delete} \PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}pendingPromises}\PYG{p}{[}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{id}\PYG{p}{];}
    \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{message}\PYG{p}{.}\PYG{n+nx}{method} \PYG{o}{===} \PYG{n+nx}{proto}\PYG{p}{.}\PYG{n+nx}{LIST\PYGZus{}PENDING\PYGZus{}PROMISES}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{c+c1}{// LIST\PYGZus{}PENDING\PYGZus{}PROMISES}
      \PYG{n+nx}{log}\PYG{p}{(}\PYG{n+nx}{JSON}\PYG{p}{.}\PYG{n+nx}{stringify}\PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}pendingPromises}\PYG{p}{));}
      \PYG{n+nx}{log}\PYG{p}{(}\PYG{n+nx}{JSON}\PYG{p}{.}\PYG{n+nx}{stringify}\PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}kbpgpDecryptController}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}waitingForPassphrase}\PYG{p}{));}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kr}{export} \PYG{k}{default} \PYG{k}{new} \PYG{n+nx}{EventProcessor}\PYG{p}{();}
\end{Verbatim}
